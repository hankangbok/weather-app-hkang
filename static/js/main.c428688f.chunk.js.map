{"version":3,"sources":["index.js"],"names":["WeatherDisplay","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","this","props","weather","myCity","React","Component","ReactionGif","_this","Object","_mnt_c_Users_Hannah_Documents_Projects_weather_app_hkang_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","propsweather","_mnt_c_Users_Hannah_Documents_Projects_weather_app_hkang_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_mnt_c_Users_Hannah_Documents_Projects_weather_app_hkang_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","state","console","log","gifButton","bind","_mnt_c_Users_Hannah_Documents_Projects_weather_app_hkang_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","keyword","img","document","querySelector","fetch","mode","then","response","json","src","data","images","original","url","catch","error","alert","setState","alt","LocationEntry","_this2","weatherDisplay","handleClick","gettheWeather","citySelected","getElementById","value","newURL","whichURL","cod","currentWeather","main","currentCity","name","onSubmit","e","preventDefault","className","type","placeholder","autoFocus","id","onClick","PrettyHeader","TopLevelWeatherApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.c428688f.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\n\nclass WeatherDisplay extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>The current weather is {this.props.weather}</h2>\n        <h3>For the city of {this.props.myCity}</h3>\n      </div>\n    );\n  }\n}\nclass ReactionGif extends React.Component {\n  constructor(props) {\n    super(props);\n    let propsweather = this.props.weather;\n    this.state = {\n      weather: propsweather\n    };\n    console.log(this.state.weather + \"is whats up\");\n    this.gifButton = this.gifButton.bind(this);\n  }\n  gifButton(keyword) {\n    console.log(\"Looking for a gif thats descriptive of \" + keyword);\n    const img = document.querySelector(\"img\");\n    fetch(\n      \"https://api.giphy.com/v1/gifs/translate?api_key=utydx4ZJeUF4Ys1Bdn5Hp8nmF1EqLow6&s=\" +\n        keyword,\n      { mode: \"cors\" }\n    )\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(response) {\n        img.src = response.data.images.original.url;\n      })\n      .catch(function(error) {\n        alert(\"No such Gif\");\n      });\n  }\n  handleCityEntry() {\n    if (this.state.weather) {\n      this.setState({ weather: this.state.weather });\n    }\n  }\n  render() {\n    return <img alt=\"\" src={this.gifButton(this.props.weather)} />;\n  }\n}\n// TODO: This class is doing too many things. Decouple it. \nclass LocationEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    // TODO: Initialize the page with the current weather for SF\n    this.state = {\n      weatherDisplay: \"chill\",\n      myCity: \"San Francisco\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.gettheWeather = this.gettheWeather.bind(this);\n    // this.sfWeather = this.sfWeather.bind(this);\n    // this.sfWeather();\n  }\n  handleClick() {\n    // api.openweathermap.org/data/2.5/weather?q=London\n    console.log(\"HUHUHU\");\n  }\n  // async sfWeather() {\n  //   const url =\n  //     \"https://api.openweathermap.org/data/2.5/weather?q=San%20Francisco&APPID=7433f086548c39db39d578affe769a25\";\n  //     const response = fetch(url, {mode: \"cors\" });\n  //     const data = await response.json();\n  //     const currentSFWeather = data.weather[0].main;\n  //     console.log(currentSFWeather);\n  //     this.setState({weatherDisplay: currentSFWeather});\n  //     return currentSFWeather;\n  // }\n  async gettheWeather() {\n    const url =\n      \"https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=7433f086548c39db39d578affe769a25\";\n    const citySelected = document.getElementById(\"city-selected\").value;\n    console.log(citySelected);\n    const newURL =\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      citySelected +\n      \"&APPID=7433f086548c39db39d578affe769a25\";\n    const whichURL = citySelected === 0 ? url : newURL;\n    const response = await fetch(whichURL, { mode: \"cors\" });\n    const data = await response.json();\n    if (data.cod === 200) {\n      console.log(data.cod);\n      const currentWeather = data.weather[0].main;\n      const currentCity = data.name;\n      console.log(currentWeather);\n      console.log(currentCity + \"Is the city\");\n      this.setState({\n        weatherDisplay: currentWeather,\n        myCity: currentCity\n      });\n    } else {\n      alert(\"That is not a valid city name\");\n    }\n  }\n\n  render() {\n    // TODO: Make it so users can enter by presisng the enter key\n    // For now, enter will not submit the data\n    const preventReload = function(e) {\n      e.preventDefault();\n      // this.gettheWeather();\n    };\n    return (\n      <form onSubmit={preventReload}>\n        <input\n          className='search-bar'\n          type=\"text\"\n          placeholder=\"Enter a city name\"\n          autoFocus=\"autoFocus\"\n          id = 'city-selected'\n        />\n        <button\n          className='search-bar'\n          type=\"button\"\n          onClick={this.gettheWeather}\n        >\n          {\" \"}\n          Search\n        </button>\n        <WeatherDisplay\n          weather={this.state.weatherDisplay}\n          myCity={this.state.myCity}\n        />\n        <ReactionGif weather={this.state.weatherDisplay} />\n      </form>\n    );\n  }\n}\n\nclass PrettyHeader extends React.Component {\n  render() {\n    return <header>Welcome to the<br/> Weather Page!</header>;\n  }\n}\n\nclass TopLevelWeatherApp extends React.Component {\n  render() {\n    return (\n      <div className=\"top-level-weather-app\">\n        <PrettyHeader />\n        <h1>Enter a city name to see the weather there!</h1>\n        <LocationEntry />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<TopLevelWeatherApp />, document.getElementById(\"root\"));\n\n// ReactDOM.render(<JustTesting />, document.getElementById('root'));\nconsole.log(\"It's looking like weather time\");\n"],"sourceRoot":""}